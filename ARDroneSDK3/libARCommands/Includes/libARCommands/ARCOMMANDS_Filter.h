/*
    Copyright (C) 2014 Parrot SA
    
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in
    the documentation and/or other materials provided with the
    distribution.
    * Neither the name of Parrot nor the names
    of its contributors may be used to endorse or promote products
    derived from this software without specific prior written
    permission.
    
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
*/
/**
 * @file libARCommands/ARCOMMANDS_Filter.h
 * @brief libARCommands filter header.
 * This file contains all declarations needed to create and use a commands filter
 * @note Autogenerated file
 **/
#ifndef _LIBARCOMMANDS_ARCOMMANDS_FILTER_H_
#define _LIBARCOMMANDS_ARCOMMANDS_FILTER_H_
#include <libARCommands/ARCOMMANDS_Types.h>
#include <inttypes.h>

/**
 * @brief Error code for ARCOMMANDS_Filter functions.
 */
typedef enum {
    ARCOMMANDS_FILTER_OK = 0, ///< No error.
    ARCOMMANDS_FILTER_ERROR_ALLOC, ///< Memory allocation error.
    ARCOMMANDS_FILTER_ERROR_BAD_STATUS, ///< The given status is not a valid status.
    ARCOMMANDS_FILTER_ERROR_BAD_FILTER, ///< The given filter is not a valid filter.
    ARCOMMANDS_FILTER_ERROR_BAD_BUFFER, ///< The given buffer is not a valid buffer.
    ARCOMMANDS_FILTER_ERROR_OTHER, ///< Any other error.
} eARCOMMANDS_FILTER_ERROR;

/**
 * @brief Status code for ARCOMMANDS_Filter_FilterCommand function
 */
typedef enum {
    ARCOMMANDS_FILTER_STATUS_ALLOWED = 0, ///< The command should pass the filter
    ARCOMMANDS_FILTER_STATUS_BLOCKED, ///< The command should not pass the filter
    ARCOMMANDS_FILTER_STATUS_UNKNOWN, ///< Unknown command. The command was possibly added in a newer version of libARCommands, or is an invalid command.
    ARCOMMANDS_FILTER_STATUS_ERROR, ///< The filtering of the command failed.
} eARCOMMANDS_FILTER_STATUS;

/**
 * @brief ARCOMMANDS_Filter object holder
 */
typedef struct ARCOMMANDS_Filter_t ARCOMMANDS_Filter_t;

/**
 * @brief Creates a new ARCOMMANDS_Filter_t
 * @param defaultBehavior The default behavior of the filter (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @param error Optionnal pointer which will hold the error code.
 * @warning This function allocates memory.
 * @note The memory must be freed by a call to ARCOMMANDS_Filter_DeleteFilter.
 * @return A new ARCOMMANDS_Filter_t instance. NULL in case of error.
 */
ARCOMMANDS_Filter_t* ARCOMMANDS_Filter_NewFilter (eARCOMMANDS_FILTER_STATUS defaultBehavior, eARCOMMANDS_FILTER_ERROR *error);

/**
 * @brief Deletes an ARCOMMANDS_Filter_t
 * @param filter The filter to delete.
 */
void ARCOMMANDS_Filter_DeleteFilter (ARCOMMANDS_Filter_t **filter);

/**
 * @brief Filter an ARCommand
 * @param filter The ARCOMMANDS_Filter_t to use for filtering.
 * @param buffer The ARCommand buffer.
 * @param len The ARCommand buffer length.
 * @param error Optionnal pointer which will hold the error code.
 * @return An eARCOMMANDS_FILTER_STATUS status code
 */
eARCOMMANDS_FILTER_STATUS ARCOMMANDS_Filter_FilterCommand (ARCOMMANDS_Filter_t *filter, uint8_t *buffer, uint32_t len, eARCOMMANDS_FILTER_ERROR *error);


// Filter ON/OFF functions
// Project common

/**
 * @brief Sets the filter behavior for all commands common.XXX.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

// Command class Network

/**
 * @brief Sets the filter behavior for all commands common.Network.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonNetworkBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Network.Disconnect.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonNetworkDisconnectBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class NetworkEvent

/**
 * @brief Sets the filter behavior for all commands common.NetworkEvent.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonNetworkEventBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.NetworkEvent.Disconnection.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonNetworkEventDisconnectionBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class Settings

/**
 * @brief Sets the filter behavior for all commands common.Settings.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Settings.AllSettings.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsAllSettingsBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Settings.Reset.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsResetBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Settings.ProductName.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsProductNameBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Settings.Country.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsCountryBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Settings.AutoCountry.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsAutoCountryBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class SettingsState

/**
 * @brief Sets the filter behavior for all commands common.SettingsState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.AllSettingsChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateAllSettingsChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.ResetChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateResetChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.ProductNameChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateProductNameChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.ProductVersionChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateProductVersionChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.ProductSerialHighChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateProductSerialHighChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.ProductSerialLowChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateProductSerialLowChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.CountryChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateCountryChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.SettingsState.AutoCountryChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonSettingsStateAutoCountryChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class Common

/**
 * @brief Sets the filter behavior for all commands common.Common.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Common.AllStates.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonAllStatesBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Common.CurrentDate.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonCurrentDateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Common.CurrentTime.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonCurrentTimeBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Common.Reboot.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonRebootBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class CommonState

/**
 * @brief Sets the filter behavior for all commands common.CommonState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.AllStatesChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateAllStatesChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.BatteryStateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateBatteryStateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.MassStorageStateListChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateMassStorageStateListChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.MassStorageInfoStateListChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateMassStorageInfoStateListChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.CurrentDateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateCurrentDateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.CurrentTimeChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateCurrentTimeChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.MassStorageInfoRemainingListChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateMassStorageInfoRemainingListChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.WifiSignalChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateWifiSignalChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CommonState.SensorsStatesListChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCommonStateSensorsStatesListChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class OverHeat

/**
 * @brief Sets the filter behavior for all commands common.OverHeat.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.OverHeat.SwitchOff.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatSwitchOffBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.OverHeat.Ventilate.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatVentilateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class OverHeatState

/**
 * @brief Sets the filter behavior for all commands common.OverHeatState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.OverHeatState.OverHeatChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatStateOverHeatChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.OverHeatState.OverHeatRegulationChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonOverHeatStateOverHeatRegulationChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class ControllerState

/**
 * @brief Sets the filter behavior for all commands common.ControllerState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonControllerStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.ControllerState.isPilotingChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonControllerStateIsPilotingChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class WifiSettings

/**
 * @brief Sets the filter behavior for all commands common.WifiSettings.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonWifiSettingsBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.WifiSettings.OutdoorSetting.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonWifiSettingsOutdoorSettingBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class WifiSettingsState

/**
 * @brief Sets the filter behavior for all commands common.WifiSettingsState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonWifiSettingsStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.WifiSettingsState.outdoorSettingsChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonWifiSettingsStateOutdoorSettingsChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class Mavlink

/**
 * @brief Sets the filter behavior for all commands common.Mavlink.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Mavlink.Start.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkStartBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Mavlink.Pause.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkPauseBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Mavlink.Stop.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkStopBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class MavlinkState

/**
 * @brief Sets the filter behavior for all commands common.MavlinkState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.MavlinkState.MavlinkFilePlayingStateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkStateMavlinkFilePlayingStateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.MavlinkState.MavlinkPlayErrorStateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonMavlinkStateMavlinkPlayErrorStateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class Calibration

/**
 * @brief Sets the filter behavior for all commands common.Calibration.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.Calibration.MagnetoCalibration.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationMagnetoCalibrationBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class CalibrationState

/**
 * @brief Sets the filter behavior for all commands common.CalibrationState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CalibrationState.MagnetoCalibrationStateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationStateMagnetoCalibrationStateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CalibrationState.MagnetoCalibrationRequiredState.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationStateMagnetoCalibrationRequiredStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CalibrationState.MagnetoCalibrationAxisToCalibrateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationStateMagnetoCalibrationAxisToCalibrateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CalibrationState.MagnetoCalibrationStartedChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCalibrationStateMagnetoCalibrationStartedChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class CameraSettingsState

/**
 * @brief Sets the filter behavior for all commands common.CameraSettingsState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCameraSettingsStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.CameraSettingsState.CameraSettingsChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonCameraSettingsStateCameraSettingsChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class GPS

/**
 * @brief Sets the filter behavior for all commands common.GPS.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonGPSBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.GPS.ControllerPositionForRun.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonGPSControllerPositionForRunBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class FlightPlanState

/**
 * @brief Sets the filter behavior for all commands common.FlightPlanState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.FlightPlanState.AvailabilityStateChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanStateAvailabilityStateChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.FlightPlanState.ComponentStateListChanged.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanStateComponentStateListChangedBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class FlightPlanEvent

/**
 * @brief Sets the filter behavior for all commands common.FlightPlanEvent.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanEventBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.FlightPlanEvent.StartingErrorEvent.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanEventStartingErrorEventBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.FlightPlanEvent.SpeedBridleEvent.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonFlightPlanEventSpeedBridleEventBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);


// Command class ARLibsVersionsState

/**
 * @brief Sets the filter behavior for all commands common.ARLibsVersionsState.XXX.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the commands (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonARLibsVersionsStateBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.ARLibsVersionsState.ControllerLibARCommandsVersion.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonARLibsVersionsStateControllerLibARCommandsVersionBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.ARLibsVersionsState.SkyControllerLibARCommandsVersion.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonARLibsVersionsStateSkyControllerLibARCommandsVersionBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);

/**
 * @brief Sets the filter behavior for the command common.ARLibsVersionsState.DeviceLibARCommandsVersion.
 * @param filter The filter to be modified.
 * @param behavior The behavior to use for the command (must be either ARCOMMANDS_FILTER_STATUS_BLOCKED or ARCOMMANDS_FILTER_STATUS_ALLOWED).
 * @return An eARCOMMANDS_FILTER_ERROR enum.
 */
eARCOMMANDS_FILTER_ERROR ARCOMMANDS_Filter_SetCommonARLibsVersionsStateDeviceLibARCommandsVersionBehavior (ARCOMMANDS_Filter_t *filter, eARCOMMANDS_FILTER_STATUS behavior);



#endif /* _LIBARCOMMANDS_ARCOMMANDS_FILTER_H_ */
