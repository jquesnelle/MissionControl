//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARCONTROLLER_FEATURE_SkyController_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ARCONTROLLER_FEATURE_SkyController_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ARCONTROLLER_FEATURE_SkyController_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ARCONTROLLER_FEATURE_SkyController_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ARDroneSDK3PINVOKE.delete_ARCONTROLLER_FEATURE_SkyController_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendWifiRequestWifiList {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiRequestWifiList_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiRequestWifiList_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendWifiRequestCurrentWifi {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiRequestCurrentWifi_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiRequestCurrentWifi_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char_p_char_p_char__eARCONTROLLER_ERROR sendWifiConnectToWifi {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiConnectToWifi_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char_p_char_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiConnectToWifi_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char_p_char_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char_p_char_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR sendWifiForgetWifi {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiForgetWifi_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiForgetWifi_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendWifiWifiAuthChannel {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiWifiAuthChannel_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendWifiWifiAuthChannel_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendDeviceRequestDeviceList {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceRequestDeviceList_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceRequestDeviceList_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendDeviceRequestCurrentDevice {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceRequestCurrentDevice_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceRequestCurrentDevice_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR sendDeviceConnectToDevice {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceConnectToDevice_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendDeviceConnectToDevice_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendSettingsAllSettings {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendSettingsAllSettings_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendSettingsAllSettings_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendSettingsReset {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendSettingsReset_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendSettingsReset_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendCommonAllStates {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCommonAllStates_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCommonAllStates_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR sendAccessPointSettingsAccessPointSSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsAccessPointSSID_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsAccessPointSSID_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR sendAccessPointSettingsAccessPointChannel {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsAccessPointChannel_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsAccessPointChannel_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_TYPE_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_BAND_uint8_t__eARCONTROLLER_ERROR sendAccessPointSettingsWifiSelection {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsWifiSelection_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_TYPE_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_BAND_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAccessPointSettingsWifiSelection_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_TYPE_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_BAND_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_TYPE_eARCOMMANDS_SKYCONTROLLER_ACCESSPOINTSETTINGS_WIFISELECTION_BAND_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendCameraResetOrientation {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCameraResetOrientation_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCameraResetOrientation_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendGamepadInfosGetGamepadControls {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendGamepadInfosGetGamepadControls_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendGamepadInfosGetGamepadControls_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendButtonMappingsGetCurrentButtonMappings {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsGetCurrentButtonMappings_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsGetCurrentButtonMappings_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendButtonMappingsGetAvailableButtonMappings {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsGetAvailableButtonMappings_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsGetAvailableButtonMappings_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR sendButtonMappingsSetButtonMapping {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsSetButtonMapping_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsSetButtonMapping_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendButtonMappingsDefaultButtonMapping {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsDefaultButtonMapping_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendButtonMappingsDefaultButtonMapping_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisMappingsGetCurrentAxisMappings {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsGetCurrentAxisMappings_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsGetCurrentAxisMappings_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisMappingsGetAvailableAxisMappings {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsGetAvailableAxisMappings_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsGetAvailableAxisMappings_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR sendAxisMappingsSetAxisMapping {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsSetAxisMapping_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsSetAxisMapping_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisMappingsDefaultAxisMapping {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsDefaultAxisMapping_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisMappingsDefaultAxisMapping_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisFiltersGetCurrentAxisFilters {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersGetCurrentAxisFilters_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersGetCurrentAxisFilters_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisFiltersGetPresetAxisFilters {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersGetPresetAxisFilters_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersGetPresetAxisFilters_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR sendAxisFiltersSetAxisFilter {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersSetAxisFilter_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersSetAxisFilter_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_int32_t_p_char__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR sendAxisFiltersDefaultAxisFilters {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersDefaultAxisFilters_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendAxisFiltersDefaultAxisFilters_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_COPILOTING_SETPILOTINGSOURCE_SOURCE__eARCONTROLLER_ERROR sendCoPilotingSetPilotingSource {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCoPilotingSetPilotingSource_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_COPILOTING_SETPILOTINGSOURCE_SOURCE__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCoPilotingSetPilotingSource_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_COPILOTING_SETPILOTINGSOURCE_SOURCE__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_eARCOMMANDS_SKYCONTROLLER_COPILOTING_SETPILOTINGSOURCE_SOURCE__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR sendCalibrationEnableMagnetoCalibrationQualityUpdates {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCalibrationEnableMagnetoCalibrationQualityUpdates_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_sendCalibrationEnableMagnetoCalibrationQualityUpdates_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_SkyController_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_Private_t privatePart {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_privatePart_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_Private_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_t_privatePart_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_Private_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_Private_t(cPtr, false);
      return ret;
    } 
  }

  public ARCONTROLLER_FEATURE_SkyController_t() : this(ARDroneSDK3PINVOKE.new_ARCONTROLLER_FEATURE_SkyController_t(), true) {
  }

}
