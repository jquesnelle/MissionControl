//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARDroneSDK3 {
  public static string ARCONTROLLER_Error_ToString(eARCONTROLLER_ERROR error) {
    string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_Error_ToString((int)error);
    return ret;
  }

  public static string ARDISCOVERY_Error_ToString(eARDISCOVERY_ERROR error) {
    string ret = ARDroneSDK3PINVOKE.ARDISCOVERY_Error_ToString((int)error);
    return ret;
  }

  public static eARCONTROLLER_DICTIONARY_KEY ARCONTROLLER_DICTIONARY_Key_GetFeatureFromCommandKey(eARCONTROLLER_DICTIONARY_KEY commandKey) {
    eARCONTROLLER_DICTIONARY_KEY ret = (eARCONTROLLER_DICTIONARY_KEY)ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_Key_GetFeatureFromCommandKey((int)commandKey);
    return ret;
  }

  public static ARCONTROLLER_Frame_t ARCONTROLLER_Frame_New(ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Frame_New(ref error);
    ARCONTROLLER_Frame_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_Frame_t(cPtr, false);
    return ret;
  }

  public static ARCONTROLLER_Frame_t ARCONTROLLER_Frame_NewWithCapacity(uint defaultCapacity, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Frame_NewWithCapacity(defaultCapacity, ref error);
    ARCONTROLLER_Frame_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_Frame_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_Frame_Delete(SWIGTYPE_p_p_ARCONTROLLER_Frame_t frame) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Frame_Delete(SWIGTYPE_p_p_ARCONTROLLER_Frame_t.getCPtr(frame));
  }

  public static int ARCONTROLLER_Frame_ensureCapacityIsAtLeast(ARCONTROLLER_Frame_t frame, uint minimumCapacity, ref eARCONTROLLER_ERROR error) {
    int ret = ARDroneSDK3PINVOKE.ARCONTROLLER_Frame_ensureCapacityIsAtLeast(ARCONTROLLER_Frame_t.getCPtr(frame), minimumCapacity, ref error);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Frame_SetFree(ARCONTROLLER_Frame_t frame) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Frame_SetFree(ARCONTROLLER_Frame_t.getCPtr(frame));
    return ret;
  }

  public static SWIGTYPE_p_ARDISCOVERY_Device_t ARDISCOVERY_Device_New(ref eARDISCOVERY_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_Device_New(ref error);
    SWIGTYPE_p_ARDISCOVERY_Device_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARDISCOVERY_Device_t(cPtr, false);
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_InitWifi(SWIGTYPE_p_ARDISCOVERY_Device_t device, eARDISCOVERY_PRODUCT product, string name, string address, int port) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_InitWifi(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(device), (int)product, name, address, port);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_Device_t ARCONTROLLER_Device_New(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_New(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), ref error);
    SWIGTYPE_p_ARCONTROLLER_Device_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_Device_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_AddStateChangedCallback(SWIGTYPE_p_ARCONTROLLER_Device_t deviceController, System.IntPtr stateChangedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_AddStateChangedCallback(SWIGTYPE_p_ARCONTROLLER_Device_t.getCPtr(deviceController), stateChangedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_AddCommandReceivedCallback(SWIGTYPE_p_ARCONTROLLER_Device_t deviceController, System.IntPtr commandReceivedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_AddCommandReceivedCallback(SWIGTYPE_p_ARCONTROLLER_Device_t.getCPtr(deviceController), commandReceivedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_SetVideoReceiveCallback(SWIGTYPE_p_ARCONTROLLER_Device_t deviceController, System.IntPtr receiveFrameCallback, System.IntPtr timeoutFrameCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_SetVideoReceiveCallback(SWIGTYPE_p_ARCONTROLLER_Device_t.getCPtr(deviceController), receiveFrameCallback, timeoutFrameCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_Start(SWIGTYPE_p_ARCONTROLLER_Device_t deviceController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_Start(SWIGTYPE_p_ARCONTROLLER_Device_t.getCPtr(deviceController));
    return ret;
  }

  public static readonly int ARCONTROLLER_FRAME_DEFAULT_CAPACITY = ARDroneSDK3PINVOKE.ARCONTROLLER_FRAME_DEFAULT_CAPACITY_get();
}
