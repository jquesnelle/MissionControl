//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARDroneSDK3 {
  public static SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t ARDISCOVERY_Connection_New(SWIGTYPE_p_f_p_uint8_t_p_uint32_t_p_void__eARDISCOVERY_ERROR sendJsonCallback, SWIGTYPE_p_f_p_uint8_t_uint32_t_p_char_p_void__eARDISCOVERY_ERROR receiveJsonCallback, System.IntPtr customData, ref eARDISCOVERY_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_New(SWIGTYPE_p_f_p_uint8_t_p_uint32_t_p_void__eARDISCOVERY_ERROR.getCPtr(sendJsonCallback), SWIGTYPE_p_f_p_uint8_t_uint32_t_p_char_p_void__eARDISCOVERY_ERROR.getCPtr(receiveJsonCallback), new global::System.Runtime.InteropServices.HandleRef(null, customData), ref error);
    SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t(cPtr, false);
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Connection_Delete(SWIGTYPE_p_p_ARDISCOVERY_Connection_ConnectionData_t connectionData) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_Delete(SWIGTYPE_p_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData));
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Connection_DeviceListeningLoop(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t connectionData, int port) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_DeviceListeningLoop(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData), port);
    return ret;
  }

  public static void ARDISCOVERY_Connection_Device_StopListening(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t connectionData) {
    ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_Device_StopListening(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData));
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Connection_ControllerConnection(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t connectionData, int port, string ip) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_ControllerConnection(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData), port, ip);
    return ret;
  }

  public static void ARDISCOVERY_Connection_getControllerIP(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t connectionData, string buffer) {
    ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_getControllerIP(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData), buffer);
  }

  public static void ARDISCOVERY_Connection_ControllerConnectionAbort(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t connectionData) {
    ARDroneSDK3PINVOKE.ARDISCOVERY_Connection_ControllerConnectionAbort(SWIGTYPE_p_ARDISCOVERY_Connection_ConnectionData_t.getCPtr(connectionData));
  }

  public static eARDISCOVERY_PRODUCT ARDISCOVERY_getProductService(eARDISCOVERY_PRODUCT product) {
    eARDISCOVERY_PRODUCT ret = (eARDISCOVERY_PRODUCT)ARDroneSDK3PINVOKE.ARDISCOVERY_getProductService((int)product);
    return ret;
  }

  public static SWIGTYPE_p_uint16_t ARDISCOVERY_getProductID(eARDISCOVERY_PRODUCT product) {
    SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(ARDroneSDK3PINVOKE.ARDISCOVERY_getProductID((int)product), true);
    return ret;
  }

  public static string ARDISCOVERY_getProductName(eARDISCOVERY_PRODUCT product) {
    string ret = ARDroneSDK3PINVOKE.ARDISCOVERY_getProductName((int)product);
    return ret;
  }

  public static void ARDISCOVERY_getProductPathName(eARDISCOVERY_PRODUCT product, string buffer, int length) {
    ARDroneSDK3PINVOKE.ARDISCOVERY_getProductPathName((int)product, buffer, length);
  }

  public static eARDISCOVERY_PRODUCT ARDISCOVERY_getProductFromName(string name) {
    eARDISCOVERY_PRODUCT ret = (eARDISCOVERY_PRODUCT)ARDroneSDK3PINVOKE.ARDISCOVERY_getProductFromName(name);
    return ret;
  }

  public static eARDISCOVERY_PRODUCT ARDISCOVERY_getProductFromProductID(SWIGTYPE_p_uint16_t productID) {
    eARDISCOVERY_PRODUCT ret = (eARDISCOVERY_PRODUCT)ARDroneSDK3PINVOKE.ARDISCOVERY_getProductFromProductID(SWIGTYPE_p_uint16_t.getCPtr(productID));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_ARDISCOVERY_Device_t ARDISCOVERY_Device_New(ref eARDISCOVERY_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_Device_New(ref error);
    SWIGTYPE_p_ARDISCOVERY_Device_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARDISCOVERY_Device_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARDISCOVERY_Device_t ARDISCOVERY_Device_NewByCopy(SWIGTYPE_p_ARDISCOVERY_Device_t deviceToCopy, ref eARDISCOVERY_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_Device_NewByCopy(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(deviceToCopy), ref error);
    SWIGTYPE_p_ARDISCOVERY_Device_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARDISCOVERY_Device_t(cPtr, false);
    return ret;
  }

  public static void ARDISCOVERY_Device_Delete(SWIGTYPE_p_p_ARDISCOVERY_Device_t device) {
    ARDroneSDK3PINVOKE.ARDISCOVERY_Device_Delete(SWIGTYPE_p_p_ARDISCOVERY_Device_t.getCPtr(device));
  }

  public static SWIGTYPE_p_ARNETWORKAL_Manager_t ARDISCOVERY_Device_NewARNetworkAL(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, ref eARDISCOVERY_ERROR error, SWIGTYPE_p_eARNETWORKAL_ERROR errorAL) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_Device_NewARNetworkAL(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), ref error, SWIGTYPE_p_eARNETWORKAL_ERROR.getCPtr(errorAL));
    SWIGTYPE_p_ARNETWORKAL_Manager_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARNETWORKAL_Manager_t(cPtr, false);
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_DeleteARNetworkAL(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, SWIGTYPE_p_p_ARNETWORKAL_Manager_t networkALManager) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_DeleteARNetworkAL(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), SWIGTYPE_p_p_ARNETWORKAL_Manager_t.getCPtr(networkALManager));
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_InitNetworkCongifuration(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, ARDISCOVERY_NetworkConfiguration_t networkConfiguration) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_InitNetworkCongifuration(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), ARDISCOVERY_NetworkConfiguration_t.getCPtr(networkConfiguration));
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_InitWifi(SWIGTYPE_p_ARDISCOVERY_Device_t device, eARDISCOVERY_PRODUCT product, string name, string address, int port) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_InitWifi(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(device), (int)product, name, address, port);
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_WifiAddConnectionCallbacks(SWIGTYPE_p_ARDISCOVERY_Device_t device, SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR sendJsonCallback, SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR receiveJsonCallback, System.IntPtr customData) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_WifiAddConnectionCallbacks(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(device), SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR.getCPtr(sendJsonCallback), SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR.getCPtr(receiveJsonCallback), new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARDISCOVERY_ERROR ARDISCOVERY_Device_InitBLE(SWIGTYPE_p_ARDISCOVERY_Device_t device, eARDISCOVERY_PRODUCT product, SWIGTYPE_p_ARNETWORKAL_BLEDeviceManager_t bleDeviceManager, SWIGTYPE_p_ARNETWORKAL_BLEDevice_t bleDevice) {
    eARDISCOVERY_ERROR ret = (eARDISCOVERY_ERROR)ARDroneSDK3PINVOKE.ARDISCOVERY_Device_InitBLE(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(device), (int)product, SWIGTYPE_p_ARNETWORKAL_BLEDeviceManager_t.getCPtr(bleDeviceManager), SWIGTYPE_p_ARNETWORKAL_BLEDevice_t.getCPtr(bleDevice));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string ARDISCOVERY_Error_ToString(eARDISCOVERY_ERROR error) {
    string ret = ARDroneSDK3PINVOKE.ARDISCOVERY_Error_ToString((int)error);
    return ret;
  }

  public static string ARCONTROLLER_Error_ToString(eARCONTROLLER_ERROR error) {
    string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_Error_ToString((int)error);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_Network_t ARCONTROLLER_Network_New(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, SWIGTYPE_p_f_p_void__void disconnectionCallback, SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR sendJsonCallback, SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR receiveJsonCallback, System.IntPtr customData, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Network_New(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), SWIGTYPE_p_f_p_void__void.getCPtr(disconnectionCallback), SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR.getCPtr(sendJsonCallback), SWIGTYPE_p_f_p_json_object_p_void__eARDISCOVERY_ERROR.getCPtr(receiveJsonCallback), new global::System.Runtime.InteropServices.HandleRef(null, customData), ref error);
    SWIGTYPE_p_ARCONTROLLER_Network_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_Network_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_Network_Delete(SWIGTYPE_p_p_ARCONTROLLER_Network_t networkController) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Network_Delete(SWIGTYPE_p_p_ARCONTROLLER_Network_t.getCPtr(networkController));
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Network_Pause(SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Network_Pause(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Network_Resume(SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Network_Resume(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Network_SetVideoReceiveCallback(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, System.Delegate receiveFrameCallback, SWIGTYPE_p_ARNETWORKAL_Stream_TimeoutFrameCallback_t timeoutFrameCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Network_SetVideoReceiveCallback(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), receiveFrameCallback, SWIGTYPE_p_ARNETWORKAL_Stream_TimeoutFrameCallback_t.getCPtr(timeoutFrameCallback), new global::System.Runtime.InteropServices.HandleRef(null, customData));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Network_SendData(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, System.IntPtr data, int dataSize, eARCONTROLLER_NETWORK_SENDING_DATA_TYPE dataType, SWIGTYPE_p_eARNETWORK_MANAGER_CALLBACK_RETURN timeoutPolicy, SWIGTYPE_p_eARNETWORK_ERROR netError) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Network_SendData(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), new global::System.Runtime.InteropServices.HandleRef(null, data), dataSize, (int)dataType, SWIGTYPE_p_eARNETWORK_MANAGER_CALLBACK_RETURN.getCPtr(timeoutPolicy), SWIGTYPE_p_eARNETWORK_ERROR.getCPtr(netError));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static eARCONTROLLER_DICTIONARY_KEY ARCONTROLLER_DICTIONARY_Key_GetFeatureFromCommandKey(eARCONTROLLER_DICTIONARY_KEY commandKey) {
    eARCONTROLLER_DICTIONARY_KEY ret = (eARCONTROLLER_DICTIONARY_KEY)ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_Key_GetFeatureFromCommandKey((int)commandKey);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_Dictionary_t ARCONTROLLER_Dictionary_New(eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_New((int)commandKey, ref error);
    SWIGTYPE_p_ARCONTROLLER_Dictionary_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_Dictionary_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_Dictionary_Delete(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t dictionary) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_Delete(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t.getCPtr(dictionary));
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_AddCallback(SWIGTYPE_p_ARCONTROLLER_Dictionary_t element, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_AddCallback(SWIGTYPE_p_ARCONTROLLER_Dictionary_t.getCPtr(element), callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_Dictionary_t element, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_Dictionary_t.getCPtr(element), callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_AddDictionaryElement(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t dictionary, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_AddDictionaryElement(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t.getCPtr(dictionary), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_RemoveDictionaryElement(SWIGTYPE_p_ARCONTROLLER_Dictionary_t dictionary, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_RemoveDictionaryElement(SWIGTYPE_p_ARCONTROLLER_Dictionary_t.getCPtr(dictionary), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static void ARCONTROLLER_Dictionary_DeleteDictionary(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t dictionary) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_DeleteDictionary(SWIGTYPE_p_p_ARCONTROLLER_Dictionary_t.getCPtr(dictionary));
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_Notify(SWIGTYPE_p_ARCONTROLLER_Dictionary_t dictionary, eARCONTROLLER_DICTIONARY_KEY commandKey, ARCONTROLLER_DICTIONARY_ELEMENT_t elementDictionary) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_Notify(SWIGTYPE_p_ARCONTROLLER_Dictionary_t.getCPtr(dictionary), (int)commandKey, ARCONTROLLER_DICTIONARY_ELEMENT_t.getCPtr(elementDictionary));
    return ret;
  }

  public static void ARCONTROLLER_Dictionary_DeleteCallbackList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t callbackList) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_DeleteCallbackList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t.getCPtr(callbackList));
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_AddCallbackInList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t callbackList, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_AddCallbackInList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t.getCPtr(callbackList), callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Dictionary_RemoveCallbackFromList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t callbackList, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Dictionary_RemoveCallbackFromList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t.getCPtr(callbackList), callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static void ARCONTROLLER_DICTIONARY_NotifyAllCallbackInList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t callbackList, eARCONTROLLER_DICTIONARY_KEY commandKey, ARCONTROLLER_DICTIONARY_ELEMENT_t elementDictionary) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_NotifyAllCallbackInList(SWIGTYPE_p_p_ARCONTROLLER_DICTIONARY_CALLBAK_LIST_ELEMENT_t.getCPtr(callbackList), (int)commandKey, ARCONTROLLER_DICTIONARY_ELEMENT_t.getCPtr(elementDictionary));
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t ARCONTROLLER_FEATURE_ARDrone3_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_ARDrone3_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_ARDrone3_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_ARDrone3_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_ARDrone3_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, SWIGTYPE_p_uint8_t cmdBuffer, SWIGTYPE_p_int32_t cmdBufferSize) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_ARDrone3_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), SWIGTYPE_p_uint8_t.getCPtr(cmdBuffer), SWIGTYPE_p_int32_t.getCPtr(cmdBufferSize));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_FLYINGSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALERTSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALERTSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALERTSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_REASON {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_REASON_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_NAVIGATEHOMESTATECHANGED_REASON_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LATITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LATITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LATITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LONGITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LONGITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_LONGITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_ALTITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_ALTITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_POSITIONCHANGED_ALTITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDZ {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDZ_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_SPEEDCHANGED_SPEEDZ_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_ROLL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_ROLL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_ROLL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_PITCH {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_PITCH_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_PITCH_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_YAW {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_YAW_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ATTITUDECHANGED_YAW_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALTITUDECHANGED_ALTITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALTITUDECHANGED_ALTITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSTATE_ALTITUDECHANGED_ALTITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_SSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_SSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_SSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_ABSOLUTCONTROLCHANGED_ON {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_ABSOLUTCONTROLCHANGED_ON_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_ABSOLUTCONTROLCHANGED_ON_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_MAXDISTANCECHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_NOFLYOVERMAXDISTANCECHANGED_SHOULDNOTFLYOVER {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_NOFLYOVERMAXDISTANCECHANGED_SHOULDNOTFLYOVER_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PILOTINGSETTINGSSTATE_NOFLYOVERMAXDISTANCECHANGED_SHOULDNOTFLYOVER_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_HULLPROTECTIONCHANGED_PRESENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_HULLPROTECTIONCHANGED_PRESENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_HULLPROTECTIONCHANGED_PRESENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_MOTOR_NUMBER {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_MOTOR_NUMBER_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_MOTOR_NUMBER_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTMOTORVERSIONLISTCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORIDS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORIDS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORIDS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORSTATECHANGED_MOTORERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORSOFTWAREVERSIONCHANGED_VERSION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORSOFTWAREVERSIONCHANGED_VERSION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORSOFTWAREVERSIONCHANGED_VERSION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_NBFLIGHTS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_NBFLIGHTS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_NBFLIGHTS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_LASTFLIGHTDURATION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_LASTFLIGHTDURATION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_LASTFLIGHTDURATION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_TOTALFLIGHTDURATION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_TOTALFLIGHTDURATION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORFLIGHTSSTATUSCHANGED_TOTALFLIGHTDURATION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORLASTERRORCHANGED_MOTORERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORLASTERRORCHANGED_MOTORERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_MOTORERRORLASTERRORCHANGED_MOTORERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_P7ID_SERIALID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_P7ID_SERIALID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_SETTINGSSTATE_P7ID_SERIALID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_PICTUREFORMATCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_PICTUREFORMATCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_PICTUREFORMATCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_AUTOWHITEBALANCECHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_AUTOWHITEBALANCECHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_AUTOWHITEBALANCECHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_VALUE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_VALUE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_VALUE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_EXPOSITIONCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_VALUE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_VALUE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_VALUE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_SATURATIONCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_ENABLED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_ENABLED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_ENABLED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_INTERVAL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_INTERVAL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_INTERVAL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MININTERVAL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MININTERVAL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MININTERVAL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MAXINTERVAL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MAXINTERVAL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_TIMELAPSECHANGED_MAXINTERVAL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_ENABLED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_ENABLED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_ENABLED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PICTURESETTINGSSTATE_VIDEOAUTORECORDCHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LATITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LATITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LATITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LONGITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LONGITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_LONGITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_ALTITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_ALTITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMECHANGED_ALTITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LATITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LATITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LATITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LONGITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LONGITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_LONGITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_ALTITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_ALTITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RESETHOMECHANGED_ALTITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSFIXSTATECHANGED_FIXED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSFIXSTATECHANGED_FIXED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSFIXSTATECHANGED_FIXED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSUPDATESTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSUPDATESTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_GPSUPDATESTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMETYPECHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMETYPECHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_HOMETYPECHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RETURNHOMEDELAYCHANGED_DELAY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RETURNHOMEDELAYCHANGED_DELAY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSETTINGSSTATE_RETURNHOMEDELAYCHANGED_DELAY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_TILT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_TILT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_TILT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_PAN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_PAN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_CAMERASTATE_ORIENTATION_PAN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_ELECTRICFREQUENCYCHANGED_FREQUENCY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_ELECTRICFREQUENCYCHANGED_FREQUENCY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_ELECTRICFREQUENCYCHANGED_FREQUENCY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_MODECHANGED_MODE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_MODECHANGED_MODE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_ANTIFLICKERINGSTATE_MODECHANGED_MODE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_NUMBEROFSATELLITECHANGED_NUMBEROFSATELLITE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_NUMBEROFSATELLITECHANGED_NUMBEROFSATELLITE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_NUMBEROFSATELLITECHANGED_NUMBEROFSATELLITE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_AVAILABLE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_AVAILABLE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPEAVAILABILITYCHANGED_AVAILABLE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPECHOSENCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPECHOSENCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_GPSSTATE_HOMETYPECHOSENCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PROSTATE_FEATURES_FEATURES {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PROSTATE_FEATURES_FEATURES_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3_PROSTATE_FEATURES_FEATURES_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_ARDrone3_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_ARDrone3_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t ARCONTROLLER_FEATURE_ARDrone3Debug_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_ARDrone3Debug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_ARDrone3Debug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3Debug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3Debug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_BATTERYDEBUGSETTINGSSTATE_USEDRONE2BATTERYCHANGED_DRONE2BATTERYUSED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_BATTERYDEBUGSETTINGSSTATE_USEDRONE2BATTERYCHANGED_DRONE2BATTERYUSED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_BATTERYDEBUGSETTINGSSTATE_USEDRONE2BATTERYCHANGED_DRONE2BATTERYUSED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_GPSDEBUGSTATE_NBSATELLITECHANGED_NBSATELLITE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_GPSDEBUGSTATE_NBSATELLITECHANGED_NBSATELLITE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_ARDRONE3DEBUG_GPSDEBUGSTATE_NBSATELLITECHANGED_NBSATELLITE_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_ARDrone3Debug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_ARDrone3Debug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_ARDrone3Debug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_ARDrone3Debug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t ARCONTROLLER_FEATURE_Common_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_Common_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_Common_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_Common_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_Common_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_Common_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_NETWORKEVENT_DISCONNECTION_CAUSE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_NETWORKEVENT_DISCONNECTION_CAUSE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_NETWORKEVENT_DISCONNECTION_CAUSE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTNAMECHANGED_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTNAMECHANGED_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTNAMECHANGED_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTVERSIONCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALHIGHCHANGED_HIGH {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALHIGHCHANGED_HIGH_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALHIGHCHANGED_HIGH_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALLOWCHANGED_LOW {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALLOWCHANGED_LOW_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_PRODUCTSERIALLOWCHANGED_LOW_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_COUNTRYCHANGED_CODE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_COUNTRYCHANGED_CODE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_COUNTRYCHANGED_CODE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_AUTOCOUNTRYCHANGED_AUTOMATIC {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_AUTOCOUNTRYCHANGED_AUTOMATIC_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_SETTINGSSTATE_AUTOCOUNTRYCHANGED_AUTOMATIC_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_BATTERYSTATECHANGED_PERCENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_BATTERYSTATECHANGED_PERCENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_BATTERYSTATECHANGED_PERCENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGESTATELISTCHANGED_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_SIZE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_SIZE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_SIZE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_USED_SIZE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_USED_SIZE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_USED_SIZE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_PLUGGED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_PLUGGED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_PLUGGED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_FULL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_FULL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_FULL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_INTERNAL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_INTERNAL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOSTATELISTCHANGED_INTERNAL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTDATECHANGED_DATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTDATECHANGED_DATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTDATECHANGED_DATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTTIMECHANGED_TIME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTTIMECHANGED_TIME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_CURRENTTIMECHANGED_TIME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_FREE_SPACE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_FREE_SPACE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_FREE_SPACE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_REC_TIME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_REC_TIME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_REC_TIME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_PHOTO_REMAINING {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_PHOTO_REMAINING_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_MASSSTORAGEINFOREMAININGLISTCHANGED_PHOTO_REMAINING_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_WIFISIGNALCHANGED_RSSI {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_WIFISIGNALCHANGED_RSSI_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_WIFISIGNALCHANGED_RSSI_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORNAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORNAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORNAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORSTATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORSTATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_COMMONSTATE_SENSORSSTATESLISTCHANGED_SENSORSTATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_OVERHEATSTATE_OVERHEATREGULATIONCHANGED_REGULATIONTYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_OVERHEATSTATE_OVERHEATREGULATIONCHANGED_REGULATIONTYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_OVERHEATSTATE_OVERHEATREGULATIONCHANGED_REGULATIONTYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CONTROLLERSTATE_ISPILOTINGCHANGED_PILOTING {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CONTROLLERSTATE_ISPILOTINGCHANGED_PILOTING_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CONTROLLERSTATE_ISPILOTINGCHANGED_PILOTING_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_WIFISETTINGSSTATE_OUTDOORSETTINGSCHANGED_OUTDOOR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_WIFISETTINGSSTATE_OUTDOORSETTINGSCHANGED_OUTDOOR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_WIFISETTINGSSTATE_OUTDOORSETTINGSCHANGED_OUTDOOR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_FILEPATH {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_FILEPATH_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_FILEPATH_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKFILEPLAYINGSTATECHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKPLAYERRORSTATECHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKPLAYERRORSTATECHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_MAVLINKSTATE_MAVLINKPLAYERRORSTATECHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_XAXISCALIBRATION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_XAXISCALIBRATION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_XAXISCALIBRATION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_YAXISCALIBRATION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_YAXISCALIBRATION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_YAXISCALIBRATION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_ZAXISCALIBRATION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_ZAXISCALIBRATION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_ZAXISCALIBRATION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_CALIBRATIONFAILED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_CALIBRATIONFAILED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATECHANGED_CALIBRATIONFAILED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONREQUIREDSTATE_REQUIRED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONREQUIREDSTATE_REQUIRED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONREQUIREDSTATE_REQUIRED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONAXISTOCALIBRATECHANGED_AXIS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONAXISTOCALIBRATECHANGED_AXIS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONAXISTOCALIBRATECHANGED_AXIS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTARTEDCHANGED_STARTED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTARTEDCHANGED_STARTED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTARTEDCHANGED_STARTED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_FOV {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_FOV_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_FOV_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_PANMIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_CAMERASETTINGSSTATE_CAMERASETTINGSCHANGED_TILTMIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_AVAILABILITYSTATECHANGED_AVAILABILITYSTATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_AVAILABILITYSTATECHANGED_AVAILABILITYSTATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_AVAILABILITYSTATECHANGED_AVAILABILITYSTATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_COMPONENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_COMPONENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_COMPONENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_FLIGHTPLANSTATE_COMPONENTSTATELISTCHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_CONTROLLERLIBARCOMMANDSVERSION_VERSION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_CONTROLLERLIBARCOMMANDSVERSION_VERSION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_CONTROLLERLIBARCOMMANDSVERSION_VERSION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_SKYCONTROLLERLIBARCOMMANDSVERSION_VERSION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_SKYCONTROLLERLIBARCOMMANDSVERSION_VERSION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_SKYCONTROLLERLIBARCOMMANDSVERSION_VERSION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_DEVICELIBARCOMMANDSVERSION_VERSION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_DEVICELIBARCOMMANDSVERSION_VERSION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMON_ARLIBSVERSIONSSTATE_DEVICELIBARCOMMANDSVERSION_VERSION_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_Common_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_Common_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_Common_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Common_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t ARCONTROLLER_FEATURE_CommonDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_CommonDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_CommonDebug_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_CommonDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_CommonDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_CommonDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_COMMONDEBUG_STATSEVENT_SENDPACKET_PACKET {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMONDEBUG_STATSEVENT_SENDPACKET_PACKET_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_COMMONDEBUG_STATSEVENT_SENDPACKET_PACKET_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_CommonDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_CommonDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_CommonDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_CommonDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t ARCONTROLLER_FEATURE_JumpingSumo_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_JumpingSumo_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_JumpingSumo_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumo_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumo_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_JumpingSumo_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, SWIGTYPE_p_uint8_t cmdBuffer, SWIGTYPE_p_int32_t cmdBufferSize) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_JumpingSumo_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), SWIGTYPE_p_uint8_t.getCPtr(cmdBuffer), SWIGTYPE_p_int32_t.getCPtr(cmdBufferSize));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_POSTURECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_POSTURECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_POSTURECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_ALERTSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_ALERTSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_PILOTINGSTATE_ALERTSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPLOADCHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPLOADCHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPLOADCHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPTYPECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPTYPECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPTYPECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPMOTORPROBLEMCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPMOTORPROBLEMCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ANIMATIONSSTATE_JUMPMOTORPROBLEMCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SETTINGSSTATE_PRODUCTGPSVERSIONCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDSTATE_VIDEOSTATECHANGEDV2_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_EVENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIARECORDEVENT_VIDEOEVENTCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_SSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_SSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_SSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_RSSI_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFISCANLISTCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_LINKQUALITYCHANGED_QUALITY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_LINKQUALITYCHANGED_QUALITY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_NETWORKSTATE_LINKQUALITYCHANGED_QUALITY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_MASTERVOLUMECHANGED_VOLUME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_MASTERVOLUMECHANGED_VOLUME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_MASTERVOLUMECHANGED_VOLUME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_THEMECHANGED_THEME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_THEMECHANGED_THEME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_AUDIOSETTINGSSTATE_THEMECHANGED_THEME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_UUID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_UUID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_UUID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_VERSION {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_VERSION_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_VERSION_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_PRODUCT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_PRODUCT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_PRODUCT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_LASTMODIFIED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_LASTMODIFIED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTMETADATALISTCHANGED_LASTMODIFIED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTUPLOADCHANGED_RESULTCODE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTUPLOADCHANGED_RESULTCODE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTUPLOADCHANGED_RESULTCODE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTDELETECHANGED_RESULTCODE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTDELETECHANGED_RESULTCODE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_SCRIPTDELETECHANGED_RESULTCODE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_PLAYSCRIPTCHANGED_RESULTCODE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_PLAYSCRIPTCHANGED_RESULTCODE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_ROADPLANSTATE_PLAYSCRIPTCHANGED_RESULTCODE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_SPEEDSETTINGSSTATE_OUTDOORCHANGED_OUTDOOR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMO_MEDIASTREAMINGSTATE_VIDEOENABLECHANGED_ENABLED_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumo_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumo_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_JumpingSumo_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_JumpingSumo_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t ARCONTROLLER_FEATURE_JumpingSumoDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_JumpingSumoDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_JumpingSumoDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumoDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumoDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_SUCCESS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_SUCCESS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_SUCCESS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_MESSAGE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_MESSAGE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_JUMPINGSUMODEBUG_USERSCRIPTSTATE_USERSCRIPTPARSED_MESSAGE_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_JumpingSumoDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_JumpingSumoDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_JumpingSumoDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_JumpingSumoDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t ARCONTROLLER_FEATURE_MiniDrone_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_MiniDrone_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_MiniDrone_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_MiniDrone_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDrone_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDrone_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_MiniDrone_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, SWIGTYPE_p_uint8_t cmdBuffer, SWIGTYPE_p_int32_t cmdBufferSize) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_MiniDrone_SendPilotingPCMDStruct(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), SWIGTYPE_p_uint8_t.getCPtr(cmdBuffer), SWIGTYPE_p_int32_t.getCPtr(cmdBufferSize));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_FLYINGSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_FLYINGSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_ALERTSTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_ALERTSTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_ALERTSTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSTATE_AUTOTAKEOFFMODECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGED_MASS_STORAGE_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_STATE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDSTATE_PICTURESTATECHANGEDV2_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_EVENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_MEDIARECORDEVENT_PICTUREEVENTCHANGED_ERROR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXALTITUDECHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_PILOTINGSETTINGSSTATE_MAXTILTCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXVERTICALSPEEDCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_CURRENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MIN_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_MAXROTATIONSPEEDCHANGED_MAX_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_WHEELSCHANGED_PRESENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_WHEELSCHANGED_PRESENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SPEEDSETTINGSSTATE_WHEELSCHANGED_PRESENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_MOTOR {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_MOTOR_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_MOTOR_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTMOTORSVERSIONCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_SOFTWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_SOFTWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_SOFTWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_HARDWARE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_HARDWARE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_PRODUCTINERTIALVERSIONCHANGED_HARDWARE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_CUTOUTMODECHANGED_ENABLE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_CUTOUTMODECHANGED_ENABLE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_SETTINGSSTATE_CUTOUTMODECHANGED_ENABLE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_FLOODCONTROLSTATE_FLOODCONTROLCHANGED_DELAY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_FLOODCONTROLSTATE_FLOODCONTROLCHANGED_DELAY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_MINIDRONE_FLOODCONTROLSTATE_FLOODCONTROLCHANGED_DELAY_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDrone_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_MiniDrone_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_MiniDrone_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t ARCONTROLLER_FEATURE_MiniDroneDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_MiniDroneDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_MiniDroneDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDroneDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDroneDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_MiniDroneDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDroneDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_MiniDroneDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_MiniDroneDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t ARCONTROLLER_FEATURE_SkyController_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_SkyController_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_SkyController_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_SkyController_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyController_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyController_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_BSSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_BSSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_BSSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SECURED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SECURED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SECURED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SAVED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SAVED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_SAVED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_RSSI {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_RSSI_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_RSSI_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_FREQUENCY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_FREQUENCY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFILIST_FREQUENCY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_SSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_SSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_SSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_STATUS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_STATUS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_CONNEXIONCHANGED_STATUS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFIAUTHCHANNELLISTCHANGED_IN_OR_OUT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFISIGNALCHANGED_LEVEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFISIGNALCHANGED_LEVEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_WIFISTATE_WIFISIGNALCHANGED_LEVEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_DEVICELIST_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_DEVICELIST_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_DEVICELIST_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_STATUS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_STATUS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_STATUS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICENAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICENAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICENAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICEPRODUCTID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICEPRODUCTID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_DEVICESTATE_CONNEXIONCHANGED_DEVICEPRODUCTID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SETTINGSSTATE_PRODUCTSERIALCHANGED_SERIALNUMBER {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SETTINGSSTATE_PRODUCTSERIALCHANGED_SERIALNUMBER_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SETTINGSSTATE_PRODUCTSERIALCHANGED_SERIALNUMBER_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_BATTERYCHANGED_PERCENT {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_BATTERYCHANGED_PERCENT_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_BATTERYCHANGED_PERCENT_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSFIXCHANGED_FIXED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSFIXCHANGED_FIXED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSFIXCHANGED_FIXED_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LATITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LATITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LATITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LONGITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LONGITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_LONGITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_ALTITUDE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_ALTITUDE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_ALTITUDE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_HEADING {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_HEADING_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_SKYCONTROLLERSTATE_GPSPOSITIONCHANGED_HEADING_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTSSIDCHANGED_SSID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTSSIDCHANGED_SSID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTSSIDCHANGED_SSID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTCHANNELCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTCHANNELCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_ACCESSPOINTCHANNELCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_BAND {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_BAND_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_ACCESSPOINTSETTINGSSTATE_WIFISELECTIONCHANGED_CHANNEL_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_TYPE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_TYPE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_TYPE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_GAMEPADINFOSSTATE_GAMEPADCONTROL_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_KEY_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_KEY_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_KEY_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_MAPPING_UID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_MAPPING_UID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_CURRENTBUTTONMAPPINGS_MAPPING_UID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_MAPPING_UID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_MAPPING_UID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_MAPPING_UID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_BUTTONMAPPINGSSTATE_AVAILABLEBUTTONMAPPINGS_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_AXIS_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_AXIS_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_AXIS_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_MAPPING_UID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_MAPPING_UID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_CURRENTAXISMAPPINGS_MAPPING_UID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_MAPPING_UID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_MAPPING_UID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_MAPPING_UID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISMAPPINGSSTATE_AVAILABLEAXISMAPPINGS_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_AXIS_ID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_AXIS_ID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_AXIS_ID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_FILTER_UID_OR_BUILDER {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_FILTER_UID_OR_BUILDER_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_CURRENTAXISFILTERS_FILTER_UID_OR_BUILDER_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_FILTER_UID {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_FILTER_UID_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_FILTER_UID_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_NAME {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_NAME_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_AXISFILTERSSTATE_PRESETAXISFILTERS_NAME_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_COPILOTINGSTATE_PILOTINGSOURCE_SOURCE {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_COPILOTINGSTATE_PILOTINGSOURCE_SOURCE_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_COPILOTINGSTATE_PILOTINGSOURCE_SOURCE_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_STATUS {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_STATUS_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_STATUS_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_X_QUALITY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_X_QUALITY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_X_QUALITY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Y_QUALITY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Y_QUALITY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Y_QUALITY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Z_QUALITY {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Z_QUALITY_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONSTATE_Z_QUALITY_get();
      return ret;
    } 
  }

  public static string ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONQUALITYUPDATESSTATE_ENABLED {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONQUALITYUPDATESSTATE_ENABLED_set(value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_KEY_SKYCONTROLLER_CALIBRATIONSTATE_MAGNETOCALIBRATIONQUALITYUPDATESSTATE_ENABLED_get();
      return ret;
    } 
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyController_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyController_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_SkyController_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_SkyController_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t ARCONTROLLER_FEATURE_SkyControllerDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t networkController, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_New(SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController), ref error);
    SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_FEATURE_SkyControllerDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_Delete(SWIGTYPE_p_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature));
  }

  public static ARCONTROLLER_DICTIONARY_COMMANDS_t ARCONTROLLER_FEATURE_SkyControllerDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_GetDictionary(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature), ref error);
    ARCONTROLLER_DICTIONARY_COMMANDS_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_COMMANDS_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyControllerDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_AddCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyControllerDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, System.Delegate callback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_RemoveCallback(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature), (int)commandKey, callback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_FEATURE_SkyControllerDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature, SWIGTYPE_p_ARCONTROLLER_Network_t networkController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_SkyControllerDebug_SetNetworkController(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature), SWIGTYPE_p_ARCONTROLLER_Network_t.getCPtr(networkController));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_SkyControllerDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t feature, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_SkyControllerDebug_GetCommandElements(SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(feature), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static ARCONTROLLER_Device_t ARCONTROLLER_Device_New(SWIGTYPE_p_ARDISCOVERY_Device_t discoveryDevice, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_New(SWIGTYPE_p_ARDISCOVERY_Device_t.getCPtr(discoveryDevice), ref error);
    ARCONTROLLER_Device_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_Device_t(cPtr, false);
    return ret;
  }

  public static void ARCONTROLLER_Device_Delete(SWIGTYPE_p_p_ARCONTROLLER_Device_t deviceController) {
    ARDroneSDK3PINVOKE.ARCONTROLLER_Device_Delete(SWIGTYPE_p_p_ARCONTROLLER_Device_t.getCPtr(deviceController));
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_Start(ARCONTROLLER_Device_t deviceController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_Start(ARCONTROLLER_Device_t.getCPtr(deviceController));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_Stop(ARCONTROLLER_Device_t deviceController) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_Stop(ARCONTROLLER_Device_t.getCPtr(deviceController));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_SetVideoReceiveCallback(ARCONTROLLER_Device_t deviceController, System.Delegate receiveFrameCallback, SWIGTYPE_p_ARNETWORKAL_Stream_TimeoutFrameCallback_t timeoutFrameCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_SetVideoReceiveCallback(ARCONTROLLER_Device_t.getCPtr(deviceController), receiveFrameCallback, SWIGTYPE_p_ARNETWORKAL_Stream_TimeoutFrameCallback_t.getCPtr(timeoutFrameCallback), new global::System.Runtime.InteropServices.HandleRef(null, customData));
    if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_AddCommandReceivedCallback(ARCONTROLLER_Device_t deviceController, System.Delegate commandReceivedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_AddCommandReceivedCallback(ARCONTROLLER_Device_t.getCPtr(deviceController), commandReceivedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_RemoveCommandReceivedCallback(ARCONTROLLER_Device_t deviceController, System.Delegate commandReceivedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_RemoveCommandReceivedCallback(ARCONTROLLER_Device_t.getCPtr(deviceController), commandReceivedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_AddStateChangedCallback(ARCONTROLLER_Device_t deviceController, System.Delegate stateChangedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_AddStateChangedCallback(ARCONTROLLER_Device_t.getCPtr(deviceController), stateChangedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static eARCONTROLLER_ERROR ARCONTROLLER_Device_RemoveStateChangedCallback(ARCONTROLLER_Device_t deviceController, System.Delegate stateChangedCallback, System.IntPtr customData) {
    eARCONTROLLER_ERROR ret = (eARCONTROLLER_ERROR)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_RemoveStateChangedCallback(ARCONTROLLER_Device_t.getCPtr(deviceController), stateChangedCallback, new global::System.Runtime.InteropServices.HandleRef(null, customData));
    return ret;
  }

  public static ARCONTROLLER_DICTIONARY_ELEMENT_t ARCONTROLLER_Device_GetCommandElements(ARCONTROLLER_Device_t deviceController, eARCONTROLLER_DICTIONARY_KEY commandKey, ref eARCONTROLLER_ERROR error) {
    global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_GetCommandElements(ARCONTROLLER_Device_t.getCPtr(deviceController), (int)commandKey, ref error);
    ARCONTROLLER_DICTIONARY_ELEMENT_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ARCONTROLLER_DICTIONARY_ELEMENT_t(cPtr, false);
    return ret;
  }

  public static eARCONTROLLER_DEVICE_STATE ARCONTROLLER_Device_GetState(ARCONTROLLER_Device_t deviceController, ref eARCONTROLLER_ERROR error) {
    eARCONTROLLER_DEVICE_STATE ret = (eARCONTROLLER_DEVICE_STATE)ARDroneSDK3PINVOKE.ARCONTROLLER_Device_GetState(ARCONTROLLER_Device_t.getCPtr(deviceController), ref error);
    return ret;
  }

  public static readonly string ARDISCOVERY_CONNECTION_JSON_STATUS_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_STATUS_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_C2DPORT_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_C2DPORT_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_D2CPORT_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_D2CPORT_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_ARSTREAM_FRAGMENT_SIZE_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_ARSTREAM_FRAGMENT_SIZE_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_ARSTREAM_FRAGMENT_MAXIMUM_NUMBER_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_ARSTREAM_FRAGMENT_MAXIMUM_NUMBER_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_ARSTREAM_MAX_ACK_INTERVAL_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_ARSTREAM_MAX_ACK_INTERVAL_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_CONTROLLER_TYPE_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_CONTROLLER_TYPE_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_CONTROLLER_NAME_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_CONTROLLER_NAME_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_DEVICE_ID_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_DEVICE_ID_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_C2D_UPDATE_PORT_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_C2D_UPDATE_PORT_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_C2D_USER_PORT_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_C2D_USER_PORT_KEY_get();
  public static readonly string ARDISCOVERY_CONNECTION_JSON_SKYCONTROLLER_VERSION = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_JSON_SKYCONTROLLER_VERSION_get();
  public static readonly int ARDISCOVERY_CONNECTION_TX_BUFFER_SIZE = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_TX_BUFFER_SIZE_get();
  public static readonly int ARDISCOVERY_CONNECTION_RX_BUFFER_SIZE = ARDroneSDK3PINVOKE.ARDISCOVERY_CONNECTION_RX_BUFFER_SIZE_get();
  public static readonly string ARDISCOVERY_SERVICE_NET_DEVICE_DOMAIN = ARDroneSDK3PINVOKE.ARDISCOVERY_SERVICE_NET_DEVICE_DOMAIN_get();
  public static readonly string ARDISCOVERY_SERVICE_NET_DEVICE_FORMAT = ARDroneSDK3PINVOKE.ARDISCOVERY_SERVICE_NET_DEVICE_FORMAT_get();
  public static readonly string ARDISCOVERY_SERVICE_NET_RSSI_SIGNAL_KEY = ARDroneSDK3PINVOKE.ARDISCOVERY_SERVICE_NET_RSSI_SIGNAL_KEY_get();
  public static readonly string ARCONTROLLER_DICTIONARY_SINGLE_KEY = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_SINGLE_KEY_get();
}
