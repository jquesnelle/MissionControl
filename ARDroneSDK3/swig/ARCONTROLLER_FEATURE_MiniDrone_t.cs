//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARCONTROLLER_FEATURE_MiniDrone_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ARCONTROLLER_FEATURE_MiniDrone_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ARCONTROLLER_FEATURE_MiniDrone_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ARCONTROLLER_FEATURE_MiniDrone_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ARDroneSDK3PINVOKE.delete_ARCONTROLLER_FEATURE_MiniDrone_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR sendPilotingFlatTrim {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingFlatTrim_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingFlatTrim_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR sendPilotingTakeOff {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingTakeOff_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingTakeOff_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR sendPilotingPCMD {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingPCMD_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingPCMD_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR setPilotingPCMD {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMD_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMD_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t_int8_t_int8_t_int8_t_int8_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR setPilotingPCMDFlag {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDFlag_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDFlag_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR setPilotingPCMDRoll {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDRoll_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDRoll_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR setPilotingPCMDPitch {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDPitch_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDPitch_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR setPilotingPCMDYaw {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDYaw_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDYaw_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR setPilotingPCMDGaz {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDGaz_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDGaz_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR setPilotingPCMDPsi {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDPsi_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_setPilotingPCMDPsi_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR sendPilotingLanding {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingLanding_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingLanding_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR sendPilotingEmergency {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingEmergency_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingEmergency_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR sendPilotingAutoTakeOffMode {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingAutoTakeOffMode_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingAutoTakeOffMode_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_eARCOMMANDS_MINIDRONE_ANIMATIONS_FLIP_DIRECTION__eARCONTROLLER_ERROR sendAnimationsFlip {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendAnimationsFlip_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_eARCOMMANDS_MINIDRONE_ANIMATIONS_FLIP_DIRECTION__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendAnimationsFlip_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_eARCOMMANDS_MINIDRONE_ANIMATIONS_FLIP_DIRECTION__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_eARCOMMANDS_MINIDRONE_ANIMATIONS_FLIP_DIRECTION__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int16_t__eARCONTROLLER_ERROR sendAnimationsCap {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendAnimationsCap_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int16_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendAnimationsCap_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int16_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_int16_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR sendMediaRecordPicture {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendMediaRecordPicture_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendMediaRecordPicture_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR sendMediaRecordPictureV2 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendMediaRecordPictureV2_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendMediaRecordPictureV2_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR sendPilotingSettingsMaxAltitude {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingSettingsMaxAltitude_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingSettingsMaxAltitude_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR sendPilotingSettingsMaxTilt {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingSettingsMaxTilt_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendPilotingSettingsMaxTilt_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR sendSpeedSettingsMaxVerticalSpeed {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsMaxVerticalSpeed_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsMaxVerticalSpeed_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR sendSpeedSettingsMaxRotationSpeed {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsMaxRotationSpeed_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsMaxRotationSpeed_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_float__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR sendSpeedSettingsWheels {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsWheels_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSpeedSettingsWheels_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR sendSettingsCutOutMode {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSettingsCutOutMode_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendSettingsCutOutMode_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_uint8_t__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR sendGPSControllerLatitudeForRun {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendGPSControllerLatitudeForRun_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendGPSControllerLatitudeForRun_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR sendGPSControllerLongitudeForRun {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendGPSControllerLongitudeForRun_set(swigCPtr, SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_sendGPSControllerLongitudeForRun_get(swigCPtr);
      SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_struct_ARCONTROLLER_FEATURE_MiniDrone_t_double__eARCONTROLLER_ERROR(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_Private_t privatePart {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_privatePart_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_Private_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_FEATURE_MiniDrone_t_privatePart_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_Private_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_Private_t(cPtr, false);
      return ret;
    } 
  }

  public ARCONTROLLER_FEATURE_MiniDrone_t() : this(ARDroneSDK3PINVOKE.new_ARCONTROLLER_FEATURE_MiniDrone_t(), true) {
  }

}
