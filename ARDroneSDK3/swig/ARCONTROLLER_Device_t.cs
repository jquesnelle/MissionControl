//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARCONTROLLER_Device_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ARCONTROLLER_Device_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ARCONTROLLER_Device_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ARCONTROLLER_Device_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ARDroneSDK3PINVOKE.delete_ARCONTROLLER_Device_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t aRDrone3 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_aRDrone3_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_aRDrone3_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t aRDrone3Debug {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_aRDrone3Debug_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_aRDrone3Debug_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_ARDrone3Debug_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t common {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_common_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_common_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_Common_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t commonDebug {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_commonDebug_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_commonDebug_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_CommonDebug_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t jumpingSumo {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_jumpingSumo_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_jumpingSumo_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumo_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t jumpingSumoDebug {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_jumpingSumoDebug_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_jumpingSumoDebug_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_JumpingSumoDebug_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t miniDrone {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_miniDrone_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_miniDrone_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDrone_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t miniDroneDebug {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_miniDroneDebug_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_miniDroneDebug_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_MiniDroneDebug_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t skyController {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_skyController_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_skyController_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyController_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t skyControllerDebug {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_skyControllerDebug_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_skyControllerDebug_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_FEATURE_SkyControllerDebug_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARCONTROLLER_Device_Private_t privatePart {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_privatePart_set(swigCPtr, SWIGTYPE_p_ARCONTROLLER_Device_Private_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARCONTROLLER_Device_t_privatePart_get(swigCPtr);
      SWIGTYPE_p_ARCONTROLLER_Device_Private_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARCONTROLLER_Device_Private_t(cPtr, false);
      return ret;
    } 
  }

  public ARCONTROLLER_Device_t() : this(ARDroneSDK3PINVOKE.new_ARCONTROLLER_Device_t(), true) {
  }

}
