//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARDISCOVERY_NetworkConfiguration_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ARDISCOVERY_NetworkConfiguration_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ARDISCOVERY_NetworkConfiguration_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ARDISCOVERY_NetworkConfiguration_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ARDroneSDK3PINVOKE.delete_ARDISCOVERY_NetworkConfiguration_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int controllerLoopIntervalMs {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerLoopIntervalMs_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerLoopIntervalMs_get(swigCPtr);
      return ret;
    } 
  }

  public int controllerToDeviceNotAckId {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceNotAckId_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceNotAckId_get(swigCPtr);
      return ret;
    } 
  }

  public int controllerToDeviceAckId {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceAckId_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceAckId_get(swigCPtr);
      return ret;
    } 
  }

  public int controllerToDeviceHightPriority {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceHightPriority_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceHightPriority_get(swigCPtr);
      return ret;
    } 
  }

  public int controllerToDeviceARStreamAck {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceARStreamAck_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceARStreamAck_get(swigCPtr);
      return ret;
    } 
  }

  public int deviceToControllerNotAckId {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerNotAckId_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerNotAckId_get(swigCPtr);
      return ret;
    } 
  }

  public int deviceToControllerAckId {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerAckId_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerAckId_get(swigCPtr);
      return ret;
    } 
  }

  public int deviceToControllerARStreamData {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerARStreamData_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerARStreamData_get(swigCPtr);
      return ret;
    } 
  }

  public int numberOfControllerToDeviceParam {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfControllerToDeviceParam_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfControllerToDeviceParam_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARNETWORK_IOBufferParam_t controllerToDeviceParams {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceParams_set(swigCPtr, SWIGTYPE_p_ARNETWORK_IOBufferParam_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_controllerToDeviceParams_get(swigCPtr);
      SWIGTYPE_p_ARNETWORK_IOBufferParam_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARNETWORK_IOBufferParam_t(cPtr, false);
      return ret;
    } 
  }

  public int numberOfDeviceToControllerParam {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfDeviceToControllerParam_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfDeviceToControllerParam_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_ARNETWORK_IOBufferParam_t deviceToControllerParams {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerParams_set(swigCPtr, SWIGTYPE_p_ARNETWORK_IOBufferParam_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerParams_get(swigCPtr);
      SWIGTYPE_p_ARNETWORK_IOBufferParam_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_ARNETWORK_IOBufferParam_t(cPtr, false);
      return ret;
    } 
  }

  public int pingDelayMs {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_pingDelayMs_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_pingDelayMs_get(swigCPtr);
      return ret;
    } 
  }

  public int numberOfDeviceToControllerCommandsBufferIds {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfDeviceToControllerCommandsBufferIds_set(swigCPtr, value);
    } 
    get {
      int ret = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_numberOfDeviceToControllerCommandsBufferIds_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_int deviceToControllerCommandsBufferIds {
    set {
      ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerCommandsBufferIds_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ARDroneSDK3PINVOKE.ARDISCOVERY_NetworkConfiguration_t_deviceToControllerCommandsBufferIds_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public ARDISCOVERY_NetworkConfiguration_t() : this(ARDroneSDK3PINVOKE.new_ARDISCOVERY_NetworkConfiguration_t(), true) {
  }

}
