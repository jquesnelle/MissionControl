//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ARCONTROLLER_DICTIONARY_VALUE_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ARCONTROLLER_DICTIONARY_VALUE_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ARCONTROLLER_DICTIONARY_VALUE_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ARCONTROLLER_DICTIONARY_VALUE_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ARDroneSDK3PINVOKE.delete_ARCONTROLLER_DICTIONARY_VALUE_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_uint8_t U8 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U8_set(swigCPtr, SWIGTYPE_p_uint8_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint8_t ret = new SWIGTYPE_p_uint8_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U8_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_int8_t I8 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I8_set(swigCPtr, SWIGTYPE_p_int8_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_int8_t ret = new SWIGTYPE_p_int8_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I8_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint16_t U16 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U16_set(swigCPtr, SWIGTYPE_p_uint16_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint16_t ret = new SWIGTYPE_p_uint16_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U16_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_int16_t I16 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I16_set(swigCPtr, SWIGTYPE_p_int16_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_int16_t ret = new SWIGTYPE_p_int16_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I16_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t U32 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U32_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U32_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_int32_t I32 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I32_set(swigCPtr, SWIGTYPE_p_int32_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_int32_t ret = new SWIGTYPE_p_int32_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I32_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t U64 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U64_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_U64_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_int64_t I64 {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I64_set(swigCPtr, SWIGTYPE_p_int64_t.getCPtr(value));
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_int64_t ret = new SWIGTYPE_p_int64_t(ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_I64_get(swigCPtr), true);
      if (ARDroneSDK3PINVOKE.SWIGPendingException.Pending) throw ARDroneSDK3PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float Float {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_Float_set(swigCPtr, value);
    } 
    get {
      float ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_Float_get(swigCPtr);
      return ret;
    } 
  }

  public double Double {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_Double_set(swigCPtr, value);
    } 
    get {
      double ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_Double_get(swigCPtr);
      return ret;
    } 
  }

  public string String {
    set {
      ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_String_set(swigCPtr, value);
    } 
    get {
      string ret = ARDroneSDK3PINVOKE.ARCONTROLLER_DICTIONARY_VALUE_t_String_get(swigCPtr);
      return ret;
    } 
  }

  public ARCONTROLLER_DICTIONARY_VALUE_t() : this(ARDroneSDK3PINVOKE.new_ARCONTROLLER_DICTIONARY_VALUE_t(), true) {
  }

}
